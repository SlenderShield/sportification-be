# =============================================================================
# DOCKER COMPOSE - DEVELOPMENT ENVIRONMENT
# =============================================================================
# Development-focused Docker Compose configuration with:
# - Hot reload for rapid development
# - Debug ports exposed
# - Volume mounts for live code changes
# - Development-friendly logging
# =============================================================================

version: "3.9"

services:
  # ---------------------------------------------------------------------------
  # MongoDB Database
  # ---------------------------------------------------------------------------
  mongodb:
    image: mongo:7.0
    container_name: sportification-mongo-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: sportification_dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
      - ../../scripts/database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - sportification-dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # ---------------------------------------------------------------------------
  # Redis Cache (Optional)
  # ---------------------------------------------------------------------------
  redis:
    image: redis:7.2-alpine
    container_name: sportification-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --requirepass dev_redis_password
    networks:
      - sportification-dev
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ---------------------------------------------------------------------------
  # API Application (Development mode with hot-reload)
  # ---------------------------------------------------------------------------
  api:
    build:
      context: ../.../..
      dockerfile: config/docker/Dockerfile
      target: development
      args:
        NODE_ENV: development
    container_name: sportification-api-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/sportification_dev?authSource=admin
      REDIS_URL: redis://:dev_redis_password@redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      LOG_LEVEL: debug
    env_file:
      - ../../config/environments/.env.development
    volumes:
      # Mount source code for hot-reload
      - ../../src:/app/src:delegated
      - ../../package*.json:/app/
      - ../../config/tsconfig.json:/app/config/tsconfig.json
      # Named volumes for node_modules and build artifacts
      - node_modules_dev:/app/node_modules
      - ../../logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sportification-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Enable debugging
    command: npm run dev

  # ---------------------------------------------------------------------------
  # MongoDB Express (Database GUI - Development only)
  # ---------------------------------------------------------------------------
  mongo-express:
    image: mongo-express:latest
    container_name: sportification-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - sportification-dev

  # ---------------------------------------------------------------------------
  # Redis Commander (Redis GUI - Development only)
  # ---------------------------------------------------------------------------
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: sportification-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:dev_redis_password
    depends_on:
      - redis
    networks:
      - sportification-dev

# =============================================================================
# Volumes
# =============================================================================
volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local
  redis_dev_data:
    driver: local
  node_modules_dev:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  sportification-dev:
    driver: bridge
    name: sportification-dev-network

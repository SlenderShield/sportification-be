{
  "name": "01. IAM - Authentication",
  "description": "Authentication endpoints - Login, Register, Logout, Token Refresh, Password Reset",
  "item": [
    {
      "name": "Register User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.tokens) {",
              "        pm.environment.set('accessToken', response.data.tokens.accessToken);",
              "        pm.environment.set('refreshToken', response.data.tokens.refreshToken);",
              "    }",
              "    if (response.data && response.data.user) {",
              "        pm.environment.set('userId', response.data.user._id);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"username\": \"johndoe\",\n  \"profile\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"dateOfBirth\": \"1990-01-15\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "register"]
        },
        "description": "Register a new user account with email, password, and profile information"
      },
      "response": []
    },
    {
      "name": "Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.tokens) {",
              "        pm.environment.set('accessToken', response.data.tokens.accessToken);",
              "        pm.environment.set('refreshToken', response.data.tokens.refreshToken);",
              "    }",
              "    if (response.data && response.data.user) {",
              "        pm.environment.set('userId', response.data.user._id);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePassword123!\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        },
        "description": "Login with email and password to receive JWT tokens"
      },
      "response": []
    },
    {
      "name": "Logout",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/auth/logout",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "logout"]
        },
        "description": "Logout and invalidate the current session"
      },
      "response": []
    },
    {
      "name": "Refresh Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.accessToken) {",
              "        pm.environment.set('accessToken', response.data.accessToken);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{refreshToken}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/auth/refresh",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "refresh"]
        },
        "description": "Refresh access token using refresh token"
      },
      "response": []
    },
    {
      "name": "Request Password Reset",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"user@example.com\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/forgot-password",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "forgot-password"]
        },
        "description": "Request a password reset email with reset token"
      },
      "response": []
    },
    {
      "name": "Reset Password",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"reset-token-from-email\",\n  \"newPassword\": \"NewSecurePassword123!\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/reset-password",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "reset-password"]
        },
        "description": "Reset password using token from email"
      },
      "response": []
    },
    {
      "name": "Verify Email",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"verification-token-from-email\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/verify-email",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "verify-email"]
        },
        "description": "Verify email address using token from email"
      },
      "response": []
    }
  ]
}
